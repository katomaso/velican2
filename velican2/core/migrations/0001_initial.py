# Generated by Django 4.2 on 2023-09-08 15:48

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re
import velican2.core.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('slug', models.CharField(max_length=32, validators=[django.core.validators.RegexValidator(re.compile('^[-\\w]+\\Z'), 'Enter a valid “slug” consisting of Unicode letters, numbers, underscores, or hyphens.', 'invalid')])),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128)),
                ('slug', models.CharField(max_length=128, validators=[django.core.validators.RegexValidator(re.compile('^[-\\w]+\\Z'), 'Enter a valid “slug” consisting of Unicode letters, numbers, underscores, or hyphens.', 'invalid')])),
                ('lang', models.CharField(choices=[('cs-cz', 'cs'), ('en-us', 'en')], max_length=5)),
                ('content', models.TextField()),
                ('created', models.DateTimeField()),
                ('updated', models.DateTimeField()),
                ('heading', models.ImageField(blank=True, null=True, upload_to=velican2.core.models.content_heading_upload)),
                ('updated_count', models.IntegerField(blank=True, default=0, help_text='How many times was the content updated')),
                ('updated_words', models.IntegerField(blank=True, default=0, help_text='How many words were changed during its lifespan')),
                ('draft', models.BooleanField(default=True)),
                ('description', models.TextField()),
                ('punchline', models.TextField(blank=True, help_text='Punchline for social media. Defaults to description.')),
                ('broadcast', models.BooleanField(default=True, help_text='If the post should be published on all linked social media')),
                ('author', models.ForeignKey(blank=True, db_index=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(blank=True, db_index=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.category')),
            ],
            options={
                'verbose_name': 'Post',
                'verbose_name_plural': 'Posts',
            },
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urn', models.CharField(db_index=True, help_text='Example: example.com/blog', max_length=128, unique=True, validators=[django.core.validators.RegexValidator(regex='^([a-zA-Z0-9_\\-][a-zA-Z0-9_/\\-]+\\.?)+$'), django.core.validators.RegexValidator(message='URN must not end with dot or slash', regex='[^\\./]$')])),
                ('lang', models.CharField(choices=[('cs-cz', 'cs'), ('en-us', 'en')], default='cs-cz', max_length=48)),
                ('timezone', models.CharField(default='Europe/Prague', max_length=128)),
                ('secure', models.BooleanField(default=True, help_text='The site is served via secured connection https')),
                ('title', models.CharField(max_length=128)),
                ('subtitle', models.TextField(null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to=velican2.core.models.site_logo_upload)),
                ('heading', models.ImageField(blank=True, null=True, upload_to=velican2.core.models.site_heading_upload)),
                ('allow_crawlers', models.BooleanField(default=True, help_text='Allow search engines to index this page')),
                ('allow_training', models.BooleanField(default=True, help_text='Allow AI engines to index this page')),
                ('engine', models.CharField(choices=[('pelican', 'Pelican')], default='pelican', max_length=12)),
                ('deployment', models.CharField(choices=[('aws', 'AWS CloudFront'), ('caddy', 'local Caddy server')], max_length=12)),
                ('facebook', models.CharField(blank=True, max_length=128, null=True)),
                ('twitter', models.CharField(blank=True, max_length=128, null=True)),
                ('linkedin', models.CharField(blank=True, max_length=128, null=True)),
                ('github', models.CharField(blank=True, max_length=128, null=True)),
                ('instagram', models.CharField(blank=True, max_length=128, null=True)),
                ('fediverse', models.CharField(blank=True, max_length=128, null=True)),
                ('publish_to_facebook', models.BooleanField(default=False)),
                ('publish_to_instagram', models.BooleanField(default=False)),
                ('publish_to_twitter', models.BooleanField(default=False)),
                ('publish_to_linkedin', models.BooleanField(default=False)),
                ('publish_to_fediverse', models.BooleanField(default=False)),
                ('webmentions', models.BooleanField(default=False, help_text='Should your site use webmentions')),
                ('webmentions_external', models.CharField(blank=True, help_text='URL of an external webmentions service (optional). Leave empty for the builtin service.', max_length=256, null=True)),
                ('matomo', models.BooleanField(default=False, help_text='Should your site use usage-tracking service')),
                ('matomo_external', models.CharField(blank=True, help_text='URL of an usage-tracking service', max_length=256, null=True)),
                ('matomo_external_id', models.CharField(blank=True, help_text='SITE_ID for the external tracking service', max_length=64, null=True)),
                ('google_analytics_code', models.CharField(blank=True, help_text='Your google analytics code UA-XYZ', max_length=64, null=True)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('staff', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Site',
                'verbose_name_plural': 'Weby',
            },
        ),
        migrations.CreateModel(
            name='Social',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128)),
                ('url', models.CharField(max_length=128)),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.site')),
            ],
        ),
        migrations.CreateModel(
            name='Publish',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('force', models.BooleanField(default=False, help_text='Upload all files no matter their modification time')),
                ('purge', models.BooleanField(default=False, help_text='Clear all files in the bucket prior uploading')),
                ('started', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('finished', models.DateTimeField(null=True)),
                ('success', models.BooleanField(null=True)),
                ('message', models.CharField(max_length=512)),
                ('post', models.ForeignKey(blank=True, db_index=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.post')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.site')),
            ],
            options={
                'verbose_name': 'Publish',
                'verbose_name_plural': 'Publish',
                'ordering': ('site', '-finished'),
            },
        ),
        migrations.AddField(
            model_name='post',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.site'),
        ),
        migrations.CreateModel(
            name='Mention',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=256)),
                ('comment', models.TextField(blank=True, help_text='Feel free to use markdown', null=True)),
                ('rating', models.SmallIntegerField(choices=[(-2, '-2'), (-1, '-1'), (0, '0'), (1, '1'), (2, '2')], help_text='Rating where -2 is completely disagree through neutral 0 to like at +2')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.site')),
                ('tag', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.category')),
            ],
            options={
                'verbose_name': 'Mention',
                'verbose_name_plural': 'Mentions',
            },
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128)),
                ('url', models.CharField(max_length=128)),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.site')),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(help_text='Slug of matching content - must not change during lifetime', max_length=64)),
                ('name', models.CharField(max_length=32, null=True)),
                ('image', models.ImageField(upload_to=velican2.core.models.content_image_upload)),
                ('post', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.post')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.site')),
            ],
        ),
        migrations.AddField(
            model_name='category',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.site'),
        ),
        migrations.CreateModel(
            name='SocialPublish',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('network', models.CharField(choices=[('fb', 'facebook'), ('ig', 'instagram'), ('x', 'twitter'), ('li', 'linkedin'), ('fv', 'fediverse')], max_length=2)),
                ('published_at', models.DateField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.post')),
            ],
            options={
                'unique_together': {('post', 'network')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='post',
            unique_together={('site', 'slug', 'lang')},
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128)),
                ('slug', models.CharField(max_length=128, validators=[django.core.validators.RegexValidator(re.compile('^[-\\w]+\\Z'), 'Enter a valid “slug” consisting of Unicode letters, numbers, underscores, or hyphens.', 'invalid')])),
                ('lang', models.CharField(choices=[('cs-cz', 'cs'), ('en-us', 'en')], max_length=5)),
                ('content', models.TextField()),
                ('created', models.DateTimeField()),
                ('updated', models.DateTimeField()),
                ('heading', models.ImageField(blank=True, null=True, upload_to=velican2.core.models.content_heading_upload)),
                ('updated_count', models.IntegerField(blank=True, default=0, help_text='How many times was the content updated')),
                ('updated_words', models.IntegerField(blank=True, default=0, help_text='How many words were changed during its lifespan')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.site')),
            ],
            options={
                'verbose_name': 'Page',
                'verbose_name_plural': 'Pages',
                'unique_together': {('site', 'slug', 'lang')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='category',
            unique_together={('site', 'slug')},
        ),
    ]
